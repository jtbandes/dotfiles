[alias]
    a = add --patch
    alias = config --get-regexp '^alias\\.'
    amend = commit --amend --no-edit
    b = branch
    b- = "!bash -c 'git cherry -v ${2:-origin/HEAD} \"$1\" | sed -E -e \"s/^(-.+)$/$(printf \"\\e[38;5;242m\")\\\\1$(tput sgr0)/g\" -e \"s/^(\\+.+)$/$(printf \"\\e[38;5;207m\")\\\\1$(tput sgr0)/g\"' --"
    ci = commit
    co = checkout
    cp = cherry-pick
    di = diff
    dic = diff --cached
    ds = diff --stat
    f = fetch -pt
    ff = pull --ff-only
    fmt = clang-format
    m = merge
    pr = pull-request -o
    pf = "!bash -c 'BR=$(git rev-parse --abbrev-ref HEAD); read -p \"Force-push $(tput setaf 3)$BR$(tput sgr0) to origin? [y/N] \"; if [[ \"$REPLY\" =~ ^[yY]$ ]]; then set -x; git push -f origin \"$BR\"; else echo Cancelled.; fi'"
    pu = !sh -c 'git push --set-upstream origin $(git rev-parse --abbrev-ref HEAD)'
    st = status
    stat = show --stat
    sub = submodule
    sup = submodule update --recursive
    which = !sh -c 'git branch -a --contains $@ && git tag --contains $@' --
    cfg = config -e --global
    l = log --graph --color --decorate --oneline
    la = log --all --graph --color --decorate --oneline
    ll = log --all --graph --color --decorate
    s = stash
    x = !sh -c 'gitx'
    sshow = stash show --format=medium
    conflict = !sh -c 'git diff --name-only --diff-filter=U -z | xargs -0 $EDITOR'
    conflicts = diff --name-only --diff-filter=U
    resolve = !sh -c 'git diff --name-only --diff-filter=U -z | xargs -0 git add -v --'
    halp = help
    rebranch = !sh -c "'if [ $(git rev-parse --abbrev-ref HEAD) = master ]; then git checkout -b \"$@\"; git branch -f master origin/master; else echo error: not on master; false; fi'" --
    remaster = branch master origin/master
    squash-branch = !sh -c 'git rebase -i `git merge-base HEAD master`'
    cp-branch = !sh -c 'git b CP_BR_TEMP $0 && git co -B $0 && git cp `git merge-base HEAD CP_BR_TEMP`..CP_BR_TEMP && git b -D CP_BR_TEMP'
    cp-branch-abort = !git reset --hard CP_BR_TEMP && git b -d CP_BR_TEMP
